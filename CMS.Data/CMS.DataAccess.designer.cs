#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMS.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CMS")]
	public partial class CMS_DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertFund(Fund instance);
    partial void UpdateFund(Fund instance);
    partial void DeleteFund(Fund instance);
    partial void InsertBankBalance(BankBalance instance);
    partial void UpdateBankBalance(BankBalance instance);
    partial void DeleteBankBalance(BankBalance instance);
    #endregion
		
		public CMS_DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CMSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CMS_DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMS_DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMS_DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMS_DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Fund> Funds
		{
			get
			{
				return this.GetTable<Fund>();
			}
		}
		
		public System.Data.Linq.Table<FundActivity> FundActivities
		{
			get
			{
				return this.GetTable<FundActivity>();
			}
		}
		
		public System.Data.Linq.Table<BankBalance> BankBalances
		{
			get
			{
				return this.GetTable<BankBalance>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ent_Member")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private System.Nullable<int> _Age;
		
		private string _Gender;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _MobilePhone;
		
		private string _LandLine;
		
		private string _Address;
		
		private string _MaritalStatus;
		
		private string _NameOfSpouse;
		
		private string _SpouseContact;
		
		private System.Nullable<int> _ChildrenCount;
		
		private string _MemberStatus;
		
		private System.Nullable<System.DateTime> _BaptizedDate;
		
		private string _BaptizedPlace;
		
		private string _BaptizedMinister;
		
		private string _BelongsToGroups;
		
		private string _Positions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnLandLineChanging(string value);
    partial void OnLandLineChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnMaritalStatusChanging(string value);
    partial void OnMaritalStatusChanged();
    partial void OnNameOfSpouseChanging(string value);
    partial void OnNameOfSpouseChanged();
    partial void OnSpouseContactChanging(string value);
    partial void OnSpouseContactChanged();
    partial void OnChildrenCountChanging(System.Nullable<int> value);
    partial void OnChildrenCountChanged();
    partial void OnMemberStatusChanging(string value);
    partial void OnMemberStatusChanged();
    partial void OnBaptizedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBaptizedDateChanged();
    partial void OnBaptizedPlaceChanging(string value);
    partial void OnBaptizedPlaceChanged();
    partial void OnBaptizedMinisterChanging(string value);
    partial void OnBaptizedMinisterChanged();
    partial void OnBelongsToGroupsChanging(string value);
    partial void OnBelongsToGroupsChanged();
    partial void OnPositionsChanging(string value);
    partial void OnPositionsChanged();
    #endregion
		
		public Member()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(250)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(250)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(250)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="NVarChar(50)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandLine", DbType="NVarChar(50)")]
		public string LandLine
		{
			get
			{
				return this._LandLine;
			}
			set
			{
				if ((this._LandLine != value))
				{
					this.OnLandLineChanging(value);
					this.SendPropertyChanging();
					this._LandLine = value;
					this.SendPropertyChanged("LandLine");
					this.OnLandLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaritalStatus", DbType="NVarChar(50)")]
		public string MaritalStatus
		{
			get
			{
				return this._MaritalStatus;
			}
			set
			{
				if ((this._MaritalStatus != value))
				{
					this.OnMaritalStatusChanging(value);
					this.SendPropertyChanging();
					this._MaritalStatus = value;
					this.SendPropertyChanged("MaritalStatus");
					this.OnMaritalStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameOfSpouse", DbType="NVarChar(50)")]
		public string NameOfSpouse
		{
			get
			{
				return this._NameOfSpouse;
			}
			set
			{
				if ((this._NameOfSpouse != value))
				{
					this.OnNameOfSpouseChanging(value);
					this.SendPropertyChanging();
					this._NameOfSpouse = value;
					this.SendPropertyChanged("NameOfSpouse");
					this.OnNameOfSpouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpouseContact", DbType="NVarChar(50)")]
		public string SpouseContact
		{
			get
			{
				return this._SpouseContact;
			}
			set
			{
				if ((this._SpouseContact != value))
				{
					this.OnSpouseContactChanging(value);
					this.SendPropertyChanging();
					this._SpouseContact = value;
					this.SendPropertyChanged("SpouseContact");
					this.OnSpouseContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildrenCount", DbType="Int")]
		public System.Nullable<int> ChildrenCount
		{
			get
			{
				return this._ChildrenCount;
			}
			set
			{
				if ((this._ChildrenCount != value))
				{
					this.OnChildrenCountChanging(value);
					this.SendPropertyChanging();
					this._ChildrenCount = value;
					this.SendPropertyChanged("ChildrenCount");
					this.OnChildrenCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberStatus", DbType="NVarChar(50)")]
		public string MemberStatus
		{
			get
			{
				return this._MemberStatus;
			}
			set
			{
				if ((this._MemberStatus != value))
				{
					this.OnMemberStatusChanging(value);
					this.SendPropertyChanging();
					this._MemberStatus = value;
					this.SendPropertyChanged("MemberStatus");
					this.OnMemberStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaptizedDate", DbType="Date")]
		public System.Nullable<System.DateTime> BaptizedDate
		{
			get
			{
				return this._BaptizedDate;
			}
			set
			{
				if ((this._BaptizedDate != value))
				{
					this.OnBaptizedDateChanging(value);
					this.SendPropertyChanging();
					this._BaptizedDate = value;
					this.SendPropertyChanged("BaptizedDate");
					this.OnBaptizedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaptizedPlace", DbType="NVarChar(250)")]
		public string BaptizedPlace
		{
			get
			{
				return this._BaptizedPlace;
			}
			set
			{
				if ((this._BaptizedPlace != value))
				{
					this.OnBaptizedPlaceChanging(value);
					this.SendPropertyChanging();
					this._BaptizedPlace = value;
					this.SendPropertyChanged("BaptizedPlace");
					this.OnBaptizedPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaptizedMinister", DbType="NVarChar(250)")]
		public string BaptizedMinister
		{
			get
			{
				return this._BaptizedMinister;
			}
			set
			{
				if ((this._BaptizedMinister != value))
				{
					this.OnBaptizedMinisterChanging(value);
					this.SendPropertyChanging();
					this._BaptizedMinister = value;
					this.SendPropertyChanged("BaptizedMinister");
					this.OnBaptizedMinisterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BelongsToGroups", DbType="NVarChar(MAX)")]
		public string BelongsToGroups
		{
			get
			{
				return this._BelongsToGroups;
			}
			set
			{
				if ((this._BelongsToGroups != value))
				{
					this.OnBelongsToGroupsChanging(value);
					this.SendPropertyChanging();
					this._BelongsToGroups = value;
					this.SendPropertyChanged("BelongsToGroups");
					this.OnBelongsToGroupsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Positions", DbType="NVarChar(250)")]
		public string Positions
		{
			get
			{
				return this._Positions;
			}
			set
			{
				if ((this._Positions != value))
				{
					this.OnPositionsChanging(value);
					this.SendPropertyChanging();
					this._Positions = value;
					this.SendPropertyChanged("Positions");
					this.OnPositionsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ent_Transaction")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Reference;
		
		private string _Notes;
		
		private System.Guid _CreditAccountId;
		
		private System.Guid _DebitAccountId;
		
		private decimal _Amount;
		
		private System.DateTime _Date;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Account> _Account1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCreditAccountIdChanging(System.Guid value);
    partial void OnCreditAccountIdChanged();
    partial void OnDebitAccountIdChanging(System.Guid value);
    partial void OnDebitAccountIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public Transaction()
		{
			this._Account = default(EntityRef<Account>);
			this._Account1 = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="NVarChar(250)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreditAccountId
		{
			get
			{
				return this._CreditAccountId;
			}
			set
			{
				if ((this._CreditAccountId != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreditAccountIdChanging(value);
					this.SendPropertyChanging();
					this._CreditAccountId = value;
					this.SendPropertyChanged("CreditAccountId");
					this.OnCreditAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DebitAccountId
		{
			get
			{
				return this._DebitAccountId;
			}
			set
			{
				if ((this._DebitAccountId != value))
				{
					if (this._Account1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDebitAccountIdChanging(value);
					this.SendPropertyChanging();
					this._DebitAccountId = value;
					this.SendPropertyChanged("DebitAccountId");
					this.OnDebitAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Transaction", Storage="_Account", ThisKey="CreditAccountId", OtherKey="Id", IsForeignKey=true)]
		public Account CreditAccount
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._CreditAccountId = value.Id;
					}
					else
					{
						this._CreditAccountId = default(System.Guid);
					}
					this.SendPropertyChanged("CreditAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Transaction1", Storage="_Account1", ThisKey="DebitAccountId", OtherKey="Id", IsForeignKey=true)]
		public Account DebitAccount
		{
			get
			{
				return this._Account1.Entity;
			}
			set
			{
				Account previousValue = this._Account1.Entity;
				if (((previousValue != value) 
							|| (this._Account1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account1.Entity = null;
						previousValue.Transactions1.Remove(this);
					}
					this._Account1.Entity = value;
					if ((value != null))
					{
						value.Transactions1.Add(this);
						this._DebitAccountId = value.Id;
					}
					else
					{
						this._DebitAccountId = default(System.Guid);
					}
					this.SendPropertyChanged("DebitAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Category;
		
		private string _Types;
		
		private string _Name;
		
		private string _Code;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntitySet<Transaction> _Transactions1;
		
		private EntitySet<Fund> _Funds;
		
		private EntityRef<Fund> _Fund;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public Account()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._Transactions1 = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions1), new Action<Transaction>(this.detach_Transactions1));
			this._Funds = new EntitySet<Fund>(new Action<Fund>(this.attach_Funds), new Action<Fund>(this.detach_Funds));
			this._Fund = default(EntityRef<Fund>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Fund.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(150)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Types", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Types;
			}
			set
			{
				if ((this._Types != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Types = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="CreditAccountId")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Transaction1", Storage="_Transactions1", ThisKey="Id", OtherKey="DebitAccountId")]
		public EntitySet<Transaction> Transactions1
		{
			get
			{
				return this._Transactions1;
			}
			set
			{
				this._Transactions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Fund", Storage="_Funds", ThisKey="Id", OtherKey="Parent")]
		public EntitySet<Fund> Funds
		{
			get
			{
				return this._Funds;
			}
			set
			{
				this._Funds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fund_Account", Storage="_Fund", ThisKey="Id", OtherKey="AccountId", IsForeignKey=true)]
		public Fund Fund
		{
			get
			{
				return this._Fund.Entity;
			}
			set
			{
				Fund previousValue = this._Fund.Entity;
				if (((previousValue != value) 
							|| (this._Fund.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fund.Entity = null;
						previousValue.Accounts = null;
					}
					this._Fund.Entity = value;
					if ((value != null))
					{
						value.Accounts = this;
						this._Id = value.AccountId;
					}
					else
					{
						this._Id = default(System.Guid);
					}
					this.SendPropertyChanged("Fund");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.CreditAccount = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.CreditAccount = null;
		}
		
		private void attach_Transactions1(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.DebitAccount = this;
		}
		
		private void detach_Transactions1(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.DebitAccount = null;
		}
		
		private void attach_Funds(Fund entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Funds(Fund entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_Fund")]
	public partial class Fund : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<System.Guid> _Parent;
		
		private System.Guid _AccountId;
		
		private string _FundType;
		
		private EntityRef<Account> _Accounts;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnParentChanging(System.Nullable<System.Guid> value);
    partial void OnParentChanged();
    partial void OnAccountIdChanging(System.Guid value);
    partial void OnAccountIdChanged();
    partial void OnFundTypeChanging(string value);
    partial void OnFundTypeChanged();
    #endregion
		
		public Fund()
		{
			this._Accounts = default(EntityRef<Account>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundType", DbType="NVarChar(50)")]
		public string FundType
		{
			get
			{
				return this._FundType;
			}
			set
			{
				if ((this._FundType != value))
				{
					this.OnFundTypeChanging(value);
					this.SendPropertyChanging();
					this._FundType = value;
					this.SendPropertyChanged("FundType");
					this.OnFundTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fund_Account", Storage="_Accounts", ThisKey="AccountId", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public Account Accounts
		{
			get
			{
				return this._Accounts.Entity;
			}
			set
			{
				Account previousValue = this._Accounts.Entity;
				if (((previousValue != value) 
							|| (this._Accounts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accounts.Entity = null;
						previousValue.Fund = null;
					}
					this._Accounts.Entity = value;
					if ((value != null))
					{
						value.Fund = this;
					}
					this.SendPropertyChanged("Accounts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Fund", Storage="_Account", ThisKey="Parent", OtherKey="Id", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Funds.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Funds.Add(this);
						this._Parent = value.Id;
					}
					else
					{
						this._Parent = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_FundActivity")]
	public partial class FundActivity
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _Parent;
		
		private string _FundType;
		
		private string _Type;
		
		private System.Guid _AccountId;
		
		private string _Name;
		
		private System.Nullable<decimal> _Amount;
		
		public FundActivity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this._Parent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundType", DbType="NVarChar(50)")]
		public string FundType
		{
			get
			{
				return this._FundType;
			}
			set
			{
				if ((this._FundType != value))
				{
					this._FundType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_BankBalance")]
	public partial class BankBalance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private decimal _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public BankBalance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591

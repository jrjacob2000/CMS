<%@ Master Language="C#" AutoEventWireup="true" CodeBehind="Site.master.cs" Inherits="WepAPI.SiteMaster" %>

<!DOCTYPE html>

<html lang="en">
<head runat="server">
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%: Page.Title %> - My ASP.NET Application</title>

    <asp:PlaceHolder runat="server">
        <%: Scripts.Render("~/bundles/modernizr") %>
    </asp:PlaceHolder>
    <webopt:bundlereference runat="server" path="~/Content/css" />
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />

</head>
<body>
    <form runat="server">
        <asp:ScriptManager runat="server">
            <Scripts>
                <%--To learn more about bundling scripts in ScriptManager see http://go.microsoft.com/fwlink/?LinkID=301884 --%>
                <%--Framework Scripts--%>
                <asp:ScriptReference Name="MsAjaxBundle" />
                <asp:ScriptReference Name="jquery" />
                <asp:ScriptReference Name="bootstrap" />
                <asp:ScriptReference Name="respond" />
                <asp:ScriptReference Name="WebForms.js" Assembly="System.Web" Path="~/Scripts/WebForms/WebForms.js" />
                <asp:ScriptReference Name="WebUIValidation.js" Assembly="System.Web" Path="~/Scripts/WebForms/WebUIValidation.js" />
                <asp:ScriptReference Name="MenuStandards.js" Assembly="System.Web" Path="~/Scripts/WebForms/MenuStandards.js" />
                <asp:ScriptReference Name="GridView.js" Assembly="System.Web" Path="~/Scripts/WebForms/GridView.js" />
                <asp:ScriptReference Name="DetailsView.js" Assembly="System.Web" Path="~/Scripts/WebForms/DetailsView.js" />
                <asp:ScriptReference Name="TreeView.js" Assembly="System.Web" Path="~/Scripts/WebForms/TreeView.js" />
                <asp:ScriptReference Name="WebParts.js" Assembly="System.Web" Path="~/Scripts/WebForms/WebParts.js" />
                <asp:ScriptReference Name="Focus.js" Assembly="System.Web" Path="~/Scripts/WebForms/Focus.js" />
                <asp:ScriptReference Name="WebFormsBundle" />
                <%--Site Scripts--%>
            </Scripts>
        </asp:ScriptManager>

        <div class="navbar navbar-inverse navbar-fixed-top">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" runat="server" href="~/">Application name</a>
                </div>
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        <li><a runat="server" href="~/">Home</a></li>
                        <li><a runat="server" href="~/About">About</a></li>
                        <li><a runat="server" href="~/Contact">Contact</a></li>
                    </ul>
                    <asp:LoginView runat="server" ViewStateMode="Disabled">
                        <AnonymousTemplate>
                            <ul class="nav navbar-nav navbar-right">
                                <li><a runat="server" href="~/Account/Register">Register</a></li>
                                <li><a runat="server" href="~/Account/Login">Log in</a></li>
                            </ul>
                        </AnonymousTemplate>
                        <LoggedInTemplate>
                            <ul class="nav navbar-nav navbar-right">
                                <li><a runat="server" href="~/Account/Manage" title="Manage your account">Hello, <%: Context.User.Identity.GetUserName()  %> !</a></li>
                                <li>
                                    <asp:LoginStatus runat="server" LogoutAction="Redirect" LogoutText="Log off" LogoutPageUrl="~/" OnLoggingOut="Unnamed_LoggingOut" />
                                </li>
                            </ul>
                        </LoggedInTemplate>
                    </asp:LoginView>
                </div>
            </div>
        </div>
        <div class="container body-content">
            <asp:ContentPlaceHolder ID="MainContent" runat="server">
            </asp:ContentPlaceHolder>
            <hr />
            <footer>
                <p>&copy; <%: DateTime.Now.Year %> - My ASP.NET Application</p>
            </footer>
        </div>
    </form>

     <script src="http://cdn.kendostatic.com/2014.3.1316/js/jquery.min.js"></script>
    <script src="http://cdn.kendostatic.com/2014.3.1316/js/angular.min.js"></script>
    <script src="http://cdn.kendostatic.com/2014.3.1316/js/kendo.all.min.js"></script>
    
    <script src="/Scripts/angular-kendo.js"></script>

     <script>
        var app = angular.module("APP", ['kendo.directives'])
        var selectedId;
        var webAPIurl = "/api/memberAPI/";

        app.service('MemberService', function ($http) {

            this.GetMember = function (id) {
                var request = $http({
                    method: "GET",
                    url: webAPIurl + id
                });
                return request;
            }

            this.GetMemberList = function () {
                var request = $http({
                    method: "GET",
                    url: webAPIurl
                });
                return request;
            }

            //Create new record
            this.CreateMember = function (Member) {
                var request = $http({
                    method: "POST",
                    url: webAPIurl,
                    data: JSON.stringify(Member)
                });
                return request;
            }

            //Update record
            this.UpdateMember = function (Member) {
                var request = $http({
                    method: "PUT",
                    url: webAPIurl,
                    data: JSON.stringify(Member)
                });
                return request;
            }

        });

        app.controller("membershipController", function ($filter,$scope, $http, MemberService) {

            var initLoad = true;
            $scope.Members = {};
            $scope.Member = {};
            $scope.IsNewMember = false;
            $scope.isEdit = false;
            $scope.saving = false;
            $scope.popupNotification = {}
            LoadMemberList();

            function LoadMemberList() {

                $scope.loading = true;
                MemberService.GetMemberList()
                    .then(function (response) {
                        $scope.Members = response.data;
                        if (initLoad) {
                            $scope.Member = $scope.Members[0];
                            initLoad = false;
                        }
                        else {
                            var result = $filter('filter')($scope.Members, { Id: selectedId })[0];
                            $scope.Member = result;
                        }
                        $scope.loading = false;
                    },
                     function (errorPl) {
                         //ShowMessage('failed in loading Employees' + errorPl.data,"error");
                         $scope.loading = false;
                         alert('failed in loading Members ' + errorPl.data);
                     })

            }

            $scope.ReLoadMembers = function () {
                LoadMemberList();
            };

            $scope.isSelected = function (id) {
                return selectedId === id;
                $scope.IsNewMember = false;
            }

            $scope.select = function ($event, id) {
                selectedId = id;
                $scope.isEdit = false;
                var result = $filter('filter')($scope.Members, { Id: id })[0];
                $scope.Member = result;
            };

            $scope.newMember = function () {
                $scope.MemberForm = {};
                this.Id = '';
                this.MemberForm.FirstName = "";
                this.MemberForm.MiddleName = "";
                this.MemberForm.LastName = "";
                this.MemberForm.Age = "";
                this.MemberForm.Gender = "";
                this.MemberForm.Birthday = "";
                this.MemberForm.MobilePhone = "";
                this.MemberForm.LandLine = "";
                this.MemberForm.Address = "";
                this.MemberForm.MaritalStatus = "";
                this.MemberForm.SpouseName = "";
                this.MemberForm.SpouseContact = "";
                this.MemberForm.ChildrenCount = "";
                this.MemberForm.MemberStatus = "";
                this.MemberForm.BaptizedDate = "";
                this.MemberForm.BaptizedPlace = "";
                this.MemberForm.BaptizedMinister = "";
                this.MemberForm.Groups = "";
                this.MemberForm.Positions = "";
            }

            $scope.edit = function (edit) {
                var result = $filter('filter')($scope.Members, { Id: selectedId })[0];
                $scope.MemberForm = result;
                $scope.isEdit = edit;
            }

            $scope.toolbarOptions = {
                items: [
                    { type: "button", id: "btnNew", text: "New", spriteCssClass: "k-icon k-i-plus" },

                    { type: "button", id: "btnEdit", text: "Edit", spriteCssClass: "k-icon k-i-pencil" }
                ],
                click: function (e) {
                    if (e.target.text() == "New") {
                        $("#createMemberFormId").find("span.k-tooltip-validation").hide();
                        $scope.IsNewMember = true;
                        $scope.win2.title("Create Member -" + $scope.IsNewMember);
                        $scope.win2.center().open();
                        $scope.$apply(function () { $scope.newMember(); });


                    }
                    if (e.target.text() == "Edit") {
                        $scope.IsNewMember = false;
                        $("#createMemberFormId").find("span.k-tooltip-validation").hide();
                        $scope.win2.title("Update Member");
                        $scope.win2.center().open();
                        $scope.$apply(function () { $scope.edit(); });
                    }
                }
            };

            function onClose(e) {
                alert(e);
            }
        });

        app.controller("createMemberController", function ($filter,$scope, $http, MemberService) {

            $scope.save = function (event) {
                event.preventDefault();
                if ($scope.validator.validate()) {
                    $scope.saving = true;
                    var Member = {
                        Id: $scope.MemberForm.Id,
                        FirstName: $scope.MemberForm.FirstName,
                        MiddleName: $scope.MemberForm.MiddleName,
                        LastName: $scope.MemberForm.LastName,
                        Age: $scope.MemberForm.Age,
                        Gender: $scope.MemberForm.Gender,
                        Birthday: $scope.MemberForm.Birthday,
                        MobilePhone: $scope.MemberForm.MobilePhone,
                        LandLine: $scope.MemberForm.LandLine,
                        Address: $scope.MemberForm.Address,
                        MaritalStatus: $scope.MemberForm.MaritalStatus,
                        NameOfSpouse: $scope.MemberForm.NameOfSpouse,
                        SpouseContact: $scope.MemberForm.SpouseContact,
                        ChildrenCount: $scope.MemberForm.ChildrenCount,
                        MemberStatus: $scope.MemberForm.MemberStatus,
                        BaptizedDate: $scope.MemberForm.BaptizedDate,
                        BaptizedPlace: $scope.MemberForm.BaptizedPlace,
                        BaptizedMinister: $scope.MemberForm.BaptizedMinister,
                        BelongsToGroups: $scope.MemberForm.BelongsToGroups,
                        Positions: $scope.MemberForm.Positions
                    };

                    if ($scope.IsNewMember) {
                        var promisePost = MemberService.CreateMember(Member);
                        promisePost.then(function (pl) {
                            var id = pl.data.Id;
                            $scope.saving = false;//turn off the saving progress
                            $scope.ReLoadMembers();
                            $scope.select(null, id);
                            $scope.win2.close();
                            $scope.ShowMessage("Member save successfully", "success");
                        }, function (err) {
                            $scope.ShowMessage('Error occured while creating new member: ' + err.data, "error");
                            $scope.saving = false;
                            $scope.win2.close();
                        })

                    }
                    else {
                        var promisePost = MemberService.UpdateMember(Member);
                        promisePost.then(function (pl) {
                            $scope.saving = false;
                            $scope.ReLoadMembers();
                            $scope.select(null, Member.Id);
                            $scope.win2.close();
                            $scope.ShowMessage("Member save successfully", "success");
                        }, function (err) {
                            $scope.saving = false;
                            $scope.win2.close();
                            $scope.ShowMessage('Error occured while updating: ' + err.data, "error");
                        })

                    }
                }

            }

            $scope.ShowMessage = function (message, messageType) {
                $scope.popupNotification = $('#msgNotification').kendoNotification({
                    appendTo: "#msgContainer",
                    autoHideAfter: 5000,
                    templates: [{
                        type: "success",
                        template: '<div class="k-widget k-notification k-notification-success" style="display: block; opacity: 1;"><div class="k-notification-wrap"><span class="k-icon k-i-tick"></span>#= myMessage #</div></div> '
                    }]
                }).data('kendoNotification');

                if (messageType == "success")
                    $scope.popupNotification.show({ myMessage: message }, messageType);
                $scope.popupNotification.show(message, messageType);

            };
        });


    </script>
</body>
</html>
